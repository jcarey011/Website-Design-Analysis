 plugins {
    id "java"
    id "jacoco"
    id "application"
    id "org.barfuin.gradle.jacocolog" version "2.0.0"
    id 'edu.odu.cs.report_accumulator' version '1.4'  
    id "pmd"   
}

repositories {

    mavenCentral()
}

dependencies {
    implementation 'org.apache.poi:poi-ooxml:3.12'
    implementation 'org.ini4j:ini4j:0.5.4'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.apache.poi:poi:3.12+'
    implementation 'org.jsoup:jsoup:1.12.1'
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
}

test {
    useJUnitPlatform()
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

task reports (dependsOn: ['javadoc', 'test', 'jacocoTestReport']){
    
}

jar {
	manifest {
		attributes 'Main-Class': 'edu.odu.cs.cs350.WebsiteAnalyzer'
	}
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

pmd {

    toolVersion = "6.21.0"
    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml" ,
        "category/java/codestyle.xml" ,
        "category/java/design/xml" ,
        "category/java/errorprone.xml" ,
        "category/java/performance.xml"
    ]
}

pmdTest {
    enabled = false
}

tasks.withType(Javadoc) {
      failOnError false
      options.addStringOption('Xdoclint:none', '-quiet')
      options.addStringOption('encoding', 'UTF-8')
      options.addStringOption('charSet', 'UTF-8')
}

task deployReports(dependsOn: ['reports', 'reportStats']){
    doLast{
        exec{
            commandLine "git", "remote", "update"
        }
        exec{
            commandLine "git", "fetch", "--all"
        }
        exec{
            commandLine "git", "add", "."
        }
        exec{
            commandLine "git", "commit", "-m", "cleanup"
        }
        exec{
            commandLine "git", "checkout", "gh-pages"
        }
        exec{
            commandLine "git", "checkout", "main", "--", "build/docs"
        }
        exec{
            commandLine "git", "add", "."
        }
        exec{
            commandLine "git", "commit", "-m", "update gh pages"
        } 
        exec{
            commandLine "git", "checkout", "main", "--", "build/reports"
        }
        exec{
            commandLine "git", "add", "."
        }
        exec{
            commandLine "git", "commit", "-m", "update gh pages"
        } 
        exec{
            commandLine "git", "push"
        } 
    
    }
}

reportStats {
    reportsURL = ('https://jcarey011.github.io/Website-Design-Analysis/build/reports')
    htmlSourceDir = file('build/html')  // default value
    reportsDir = file('build/reports') // default value
}
